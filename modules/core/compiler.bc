// ----------------------------------------------------------------------------
//
// Basecode Compiler
// Copyright (C) 2018 Jeff Panici
// All rights reserved.
//
// This software source file is licensed under the terms of MIT license.
// For details, please read the LICENSE file.
//
// ----------------------------------------------------------------------------

public :: ns {
    @library "basecode";
    #foreign print :: proc(format: ^u8, ...values: any) @alias "fmt_print";

    min :: proc(a: u32, b: u32): u32 {
        if a < b {
            return a;
        } else {
            return b;
        };
    };

    max :: proc(a: u32, b: u32): u32 {
        if a > b {
            return a;
        } else {
            return b;
        };
    };

    next_power_of_two :: proc(n: u32): u32 {
        n -:= 1;
        n |:= n shr 1;
        n |:= n shr 2;
        n |:= n shr 4;
        n |:= n shr 8;
        n |:= n shr 16;
        n +:= 1;
        return n;
    };

    assign_string :: proc(str: ^string, lit: ^u8, len: u32) {
        str.length := len;
        str.capacity := next_power_of_two(len + 1);
        str.data := alloc(cast<u64>(str.capacity));
        fill(str.data, 0, cast<u64>(str.capacity));
        copy(str.data, lit, cast<u64>(len));
    };

//    traps :: enum<u8> {
//        putc := 1;
//        getc;
//    };
//
//    putc :: proc(char: u8) {
//        #assembly {{
//            .ireg char_addr
//
//            load.b  char_addr, fp, local(char)
//            push.b  char_addr
//            trap.b  module(traps::putc)
//        }};
//    };
};
