// ----------------------------------------------------------------------------
//
// Basecode Bootstrap Compiler
// Copyright (C) 2018 Jeff Panici
// All rights reserved.
//
// This software source file is licensed under the terms of MIT license.
// For details, please read the LICENSE.md file.
//
// ----------------------------------------------------------------------------

@library "libalpha-core.dylib";
#foreign print := proc(format:string, values:...any) @alias "fmt_print";

print("at the very top!");

alpha::compiler::config := ns {
    fibonacci := ns {
        @ship_it "now!";
        constant length_of_sequence := 1000;
    };
};

@foobar "baz";
alpha::compiler::examples := ns {
    count:u32;
    max:u16 := 32767;
    name:string := "fibonacci test program";

    count := 1;
    print("what the hell am i doing here?");

    @func_it 42;
    fib := proc(n:u64 := 10):u64 {
        @dont_fold_me_dude;
        if n == 0 || n == 1 {
            return n;
        } else {
            value:u64;

            value := fib((n - 1) + fib(n - 2));
            print("%s\n", value);
            return value;
        };
    };

    this_doesn_t_need_to_be_main := proc():u32 {
        import alpha::compiler::config::fibonacci;

        final_fib_value:u32;
        final_fib_value := cast<u32>(fib(alpha::compiler::config::fibonacci::length_of_sequence));
    'the_end:
        return final_fib_value;
    } @entry_point;
};