NOTES
------------------------
- use elfio for read/writing obj/executable files

- are the compiler directives bootstrapped using the @directive attribute so
  therefore all implemented in Basecode?

Basecode Bootstrap Tasks
------------------------
- type needs to include type parameters

- does binary_operator/unary_operator need element* or just expression*

- base types should be statically defined in program

- determine the best way to create new elements
    * maybe follow a similar pattern to ast_builder

- if/else if/else

- switch

- with

- transaction, commit, rollback

- view

- defer

- for

- while

- alias

- break/continue

- return

- union/struct/enum

- comment

- boolean_literal

- array_literal

- procedure subclass for type

=================================================================

- add unload_shared_library to terp

- implement block comments /* */ in the lexer/parser

- require return statement
    * multiple return values

=================================================================

DONE
----
- implement namespaces in the parser
- implement enumerations in lexer/parser
- implement object/pointer dereference with . operator
- fix precedence of @attribute in parser
- implement defer in parser (executed in reverse order)
- implement with in parser
- ast to internal model
- what is the type of a function?
- remove scope, symbol_table, constant_expression_evaluator, type_inference_engine
