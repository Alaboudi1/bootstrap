NOTES
------------------------
- use elfio for read/writing obj/executable files

- are the compiler directives bootstrapped using the @directive attribute so
  therefore all implemented in Basecode?

Basecode Bootstrap Tasks
------------------------
- add unload_shared_library to terp

- implement block comments /* */ in the lexer/parser

- what is the type of a function?

- require return statement
    * multiple return values

- need to bootstrap support functionality into the heap:
    * compiler directives
        #eval

        #assert
            number_argument
            argument_types
            argument_values
            filename
            line_number

            returns bool

        #check

    * attributes
        @directive name {func};
        @entry_point {func};

    * char (for character literals)
    * address_of
    * type_of
    * size_of
    * deep_copy
    * transaction

    --
      does this just return an array of integers?
      is this an AST "function" that gets expanded in place?

    * range
    --

    * string support
    * array support

- simplify syntax and type system

DONE
----
- implement namespaces in the parser
- implement enumerations in lexer/parser
- implement object/pointer dereference with . operator
- fix precedence of @attribute in parser
- implement defer in parser (executed in reverse order)
- implement with in parser
