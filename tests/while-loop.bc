support ::= module("support/module.bc");

i: u32 := 1;

type_of_string := type_of(#type string);

type_of_i: ^type := nil;
type_of_i := type_of(i);

type_name: string;

//  MOVE.QW I0, type_name
//  MOVE.QW I1, type_of_i
//  LOAD.QW I2, I1
//  MOVE.QW I3, I2, offset(name)        ; == 0
//  COPY.B  I0, I3, size_of(string)     ; == 16 bytes
type_name := type_of_i.name;

while i <= 20 {
    print("i := %02d ... ", i);
    if (i % 15) == 0 {
        print("fizzbuzz\n");
    } else if (i % 5) == 0 {
        print("buzz\n");
    } else if (i % 3) == 0 {
        print("fizz\n");
    } else {
        print("zzzzz\n");
    };
    i +:= 1;
};

j: u32 := 0;
k: u32 := 0;
while true {
    k +:= 1;

    print("j := %02d\n", j);

    if (k % 4) == 0 {
        continue;
    };

    if j == 6 {
        continue 'double_it:;
    };

    if j == 20 {
        break;
    };

    j +:= 1;
    continue;

'double_it:
    j +:= 4;
};

print("after: j := %02d\n", j);
