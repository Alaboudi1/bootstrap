core :: module("../modules/core");

MODE :: 2;

#assert true;
#assert MODE == 2;
//#assert 2 == 1;

#if MODE == 1 {
    print("mode 1\n");
} #elif MODE == 2 {
    print("mode 2\n");
} #else {
    print("unknown mode\n");
};

s2 := "oh, noes!  what did you DO!?";

factorial :: proc(n: u64 := 12): u64 {
    r: u64 := 1;
    for i in range<u64>(1, n) {
        r *:= i;
    };
    return r;
};

fib :: proc(n: u64 := 10): u64 {
    if n == 0 || n == 1 {
        return n;
    } else {
        return fib((n - 1) + fib(n - 2));
    };
};

result := fib(20);
print("fib       := %d\n", result);
assert(result == 1, s2);

result := factorial();
print("factorial := %d\n", result);
assert(result == 479001600, s2);
